//
class Solution {
    public String convert(String s, int numRows) {
        if(s.length()==0) return new String();
        if(numRows==1) return s;
        List<Character> alphabet = new ArrayList<>();
        int k = s.length()/(2*numRows-2) + 1;
        for(int i =0; i<numRows ; i++)
        {
            if(i==0 || i == numRows-1)
            {
                for(int j =0;j<k; j++)
                {
                    if(2*j*(numRows-1)+i<s.length())
                       alphabet.add(s.charAt(2*j*(numRows-1)+i)) ;
                }
                    
            }
            else{
                for(int j =0;j<k; j++)
                {
                    if(2*(j+1)*(numRows-1)-i<s.length())
                    {
                        alphabet.add(s.charAt(2*j*(numRows-1)+i));
                        alphabet.add(s.charAt(2*(j+1)*(numRows-1)-i));
                    }
                    else if(2*j*(numRows-1)+i<s.length())
                    {
                        alphabet.add(s.charAt(2*j*(numRows-1)+i));
                    }
                    else
                        continue;
                }
            }
        }
        StringBuilder thestr = new StringBuilder();
        for(char e: alphabet)
            thestr.append(e);
        return thestr.toString();
    }
}
